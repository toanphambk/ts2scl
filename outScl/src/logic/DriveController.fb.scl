FUNCTION_BLOCK "DriveController"
VAR_INPUT
    input : "DriveControllerInput";
END_VAR
VAR_OUTPUT
    output : "DriveControllerOutput";
END_VAR
VAR RETAIN
    lastSpeed : INT;
    maxSpeed : INT;
    errorCount : INT;
    totalRuntime : INT;
END_VAR
VAR
    statusHistory : ARRAY[0..4] OF WORD;
    speedBuffer : ARRAY[0..4] OF INT;
    statusWord : WORD;
    currentMode : INT;
    safetyStatus : WORD;
END_VAR
VAR_TEMP
    tempStatus : WORD;
    tempSpeed : INT;
    tempMode : INT;
    calculatedSpeed : INT;
    driveStatus : WORD;
    isSpeedValid : BOOL;
    actualDriveSpeed : INT;
    arrayIndex : INT;
    calcSpeedInput : "DriveCalcSpeedInput";
    calcSpeedOutput : "DriveCalcSpeedOutput";
    driveCtrlInput : "DriveControlInput";
    driveCtrlOutput : "DriveControlOutput";
    errorCounter : INT;
    validationStatus : BOOL;
    i : INT;
    j : INT;
END_VAR
BEGIN
    #calcSpeedInput.enable := FALSE;
    #calcSpeedInput.targetSpeed := 0;
    #calcSpeedInput.status := W#16#0000;
    WHILE #errorCounter < #errorCount DO
            #errorCounter := #errorCounter + 1;
            IF #errorCounter > 10 THEN
                    #tempStatus := W#16#8000;
                    EXIT;
            ELSE
                    #tempStatus := W#16#4000;
            END_IF;
    END_WHILE;
    FOR #i := 15 TO 1 BY -2 DO
            IF #i < 5 THEN
                    EXIT;
            END_IF;
            IF #i < #input.speedLimits.length THEN
                    #output.speedHistory[#i] := 1;
            END_IF;
    END_FOR;
    REPEAT
            FOR #i := 3 TO 0 BY -1 DO
                    #statusHistory[#i + 1] := #statusHistory[#i];
            END_FOR;
            #statusHistory[0] := #statusWord;
    UNTIL  END_REPEAT;
    FOR #i := 3 TO 0 BY -1 DO
            #statusHistory[#i + 1] := #statusHistory[#i];
    END_FOR;
    #statusHistory[0] := #statusWord;
    FOR #i := 0 TO #input.speedLimits.length BY 2 DO
            IF #input.speedLimits[#i] > 0 THEN
                    IF #i < 5 THEN
                            #output.speedHistory[#i] := #input.speedLimits[#i];
                            IF #i MOD 2 = 0 AND #input.safetyEnabled THEN
                                    #output.speedHistory[#i] := (#output.speedHistory[#i] * 8) / 10;
                            END_IF;
                    ELSE
                            FOR #j := 0 TO 3 DO
                                    IF #i + #j < #input.speedLimits.length THEN
                                            #output.speedHistory[#i] := #input.speedLimits[#i + #j];
                                            EXIT;
                                    END_IF;
                            END_FOR;
                    END_IF;
            ELSE
                    #output.speedHistory[#i] := 0;
            END_IF;
    END_FOR;
    IF #input.speedLimits[0] > 0 AND #calculatedSpeed > #input.speedLimits[0] THEN
            #calculatedSpeed := #input.speedLimits[0];
    END_IF;
    IF #input.safetyEnabled THEN
            #safetyStatus := W#16#0001;
            #output.isSafetyActive := TRUE;
    ELSE
            #safetyStatus := W#16#0000;
            #output.isSafetyActive := FALSE;
    END_IF;
    IF NOT #input.enable THEN
            #output.actualSpeed := 0;
            #output.isRunning := FALSE;
            #output.status := #statusWord;
            #output.errorStatus := W#16#0000;
    END_IF;
    #calcSpeedInput.enable := #input.enable;
    #calcSpeedInput.targetSpeed := #input.targetSpeed;
    #calcSpeedInput.status := #statusWord;
    #speedBuffer[#arrayIndex] := #calculatedSpeed;
    #arrayIndex := (#arrayIndex + 1) MOD 5;
    #driveCtrlInput.enable := #calcSpeedOutput.isRunning;
    #driveCtrlInput.setSpeed := #calculatedSpeed;
    #tempMode := "DriveControl"(input := #driveCtrlInput,
output => #driveCtrlOutput);
    IF #calcSpeedOutput.isRunning AND #calculatedSpeed > 0 AND #calculatedSpeed <= #maxSpeed THEN
            #tempStatus := W#16#0001;
            #tempSpeed := #calculatedSpeed;
            #tempMode := 1;
            #output.actualSpeed := #driveCtrlOutput.actualSpeed;
            #output.isRunning := TRUE;
            #lastSpeed := #tempSpeed;
            #currentMode := #tempMode;
            #statusWord := #tempStatus;
            #totalRuntime := #totalRuntime + 1;
            #output.speedHistory[0] := #driveCtrlOutput.actualSpeed;
    ELSE
            #tempStatus := W#16#0002;
            #tempSpeed := 0;
            #tempMode := 0;
            #output.actualSpeed := 0;
            #output.isRunning := FALSE;
            #currentMode := #tempMode;
            #statusWord := #tempStatus;
            #errorCount := #errorCount + 1;
    END_IF;
    #output.status := #statusWord;
    #output.errorStatus := #errorCount;
    #output.runtime := #totalRuntime;

END_FUNCTION_BLOCK